
import React, { useState, useEffect } from "react";
import { Link } from "react-router-dom";
import { createPageUrl } from "@/utils";
import { User } from "@/entities/User";
import { DnDGame, DnDCharacter } from "@/entities/all";
import { 
  Dice1, 
  Plus,
  Users,
  Crown,
  Play,
  Settings,
  UserPlus,
  Gamepad2,
  Map as MapIcon,
  Swords, // New Icon for Enemies
  TreasureChest // Added for Loot
} from "lucide-react";
import { Button } from "@/components/ui/button";
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import { motion } from "framer-motion";

export default function DnDGames() {
  const [user, setUser] = useState(null);
  const [myGames, setMyGames] = useState([]);
  const [joinedGames, setJoinedGames] = useState([]);
  const [isLoading, setIsLoading] = useState(true);

  // Helper function to get display name from email
  const getDisplayName = (email) => {
    if (!email) return "Unbekannt";
    return email.split('@')[0];
  };

  useEffect(() => {
    loadData();
  }, []);

  const loadData = async () => {
    try {
      const userData = await User.me();
      setUser(userData);
      
      // Spiele laden, die ich als GM erstellt habe
      const createdGames = await DnDGame.filter({ gamemaster_email: userData.email });
      setMyGames(createdGames);
      
      // Spiele laden, in denen ich als Spieler teilnehme
      const myCharacters = await DnDCharacter.filter({ player_email: userData.email });
      const gameIds = [...new Set(myCharacters.map(char => char.game_id))];
      const joinedGamesList = [];
      for (const gameId of gameIds) {
        const game = await DnDGame.filter({ id: gameId });
        if (game.length > 0) {
          joinedGamesList.push(game[0]);
        }
      }
      setJoinedGames(joinedGamesList);
      
    } catch (error) {
      console.error("Fehler beim Laden der Daten:", error);
    }
    setIsLoading(false);
  };

  const handleLogin = async () => {
    await User.loginWithRedirect(window.location.href);
  };

  const startGame = async (gameId) => {
    try {
      await DnDGame.update(gameId, { status: 'active' });
      loadData(); // Reload to show updated status
    } catch (error) {
      console.error("Fehler beim Starten des Spiels:", error);
    }
  };

  if (isLoading) {
    return (
      <div className="min-h-screen bg-gradient-to-br from-orange-900 via-gray-900 to-orange-900 py-12 px-4 sm:px-6 lg:px-8 flex items-center justify-center">
        <div className="text-center">
          <Dice1 className="w-16 h-16 text-orange-400 mx-auto mb-4 animate-spin" />
          <p className="text-orange-200">Lade D&D Spiele...</p>
        </div>
      </div>
    );
  }

  if (!user) {
    return (
      <div className="min-h-screen bg-gradient-to-br from-orange-900 via-gray-900 to-orange-900 py-12 px-4 sm:px-6 lg:px-8">
        <div className="max-w-4xl mx-auto text-center">
          <motion.div 
            initial={{ opacity: 0, y: 30 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.6 }}
            className="bg-orange-800/20 backdrop-blur border border-orange-700/30 rounded-2xl p-12"
          >
            <Dice1 className="w-24 h-24 text-orange-400 mx-auto mb-8" />
            <h1 className="text-5xl font-bold text-orange-100 mb-6">
              D&D Game Master
            </h1>
            <p className="text-xl text-orange-200 mb-8 leading-relaxed">
              Erstelle und verwalte deine eigenen Dungeons & Dragons Kampagnen. 
              Lade Spieler ein, verwalte Charaktere und erlebe epische Abenteuer!
            </p>
            <Button 
              onClick={handleLogin}
              size="lg"
              className="bg-gradient-to-r from-orange-600 to-red-600 hover:from-orange-700 hover:to-red-700 text-white font-bold px-8 py-4 text-lg"
            >
              <Crown className="w-6 h-6 mr-2" />
              Als Game Master anmelden
            </Button>
          </motion.div>
        </div>
      </div>
    );
  }

  return (
    <div className="min-h-screen bg-gradient-to-br from-orange-900 via-gray-900 to-orange-900 py-12 px-4 sm:px-6 lg:px-8">
      <div className="max-w-7xl mx-auto">
        {/* Header */}
        <motion.div 
          className="text-center mb-12"
          initial={{ opacity: 0, y: 30 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.6 }}
        >
          <h1 className="text-5xl lg:text-6xl font-bold mb-6">
            <span className="bg-gradient-to-r from-orange-300 to-red-300 bg-clip-text text-transparent">
              D&D Game Master
            </span>
          </h1>
          <p className="text-xl text-orange-200 max-w-3xl mx-auto leading-relaxed">
            Willkommen zur√ºck, {user.full_name || user.email}! 
            Verwalte deine Kampagnen und erschaffe unvergessliche Abenteuer.
          </p>
        </motion.div>

        {/* Quick Actions */}
        <motion.div 
          className="grid md:grid-cols-2 gap-6 mb-12"
          initial={{ opacity: 0, y: 30 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.6, delay: 0.1 }}
        >
          <Card className="bg-orange-800/20 border-orange-700/30 backdrop-blur hover:bg-orange-800/30 transition-all duration-300">
            <CardHeader>
              <div className="flex items-center space-x-3">
                <div className="w-12 h-12 bg-gradient-to-r from-orange-500 to-red-500 rounded-lg flex items-center justify-center">
                  <Plus className="w-6 h-6 text-white" />
                </div>
                <div>
                  <CardTitle className="text-orange-100">Neues Spiel erstellen</CardTitle>
                  <CardDescription className="text-orange-300">Starte eine neue D&D Kampagne</CardDescription>
                </div>
              </div>
            </CardHeader>
            <CardContent>
              <Link to={createPageUrl("CreateDnDGame")}>
                <Button className="w-full bg-gradient-to-r from-orange-600 to-red-600 hover:from-orange-700 hover:to-red-700 text-white">
                  Spiel erstellen
                </Button>
              </Link>
            </CardContent>
          </Card>

          <Card className="bg-orange-800/20 border-orange-700/30 backdrop-blur hover:bg-orange-800/30 transition-all duration-300">
            <CardHeader>
              <div className="flex items-center space-x-3">
                <div className="w-12 h-12 bg-gradient-to-r from-blue-500 to-purple-500 rounded-lg flex items-center justify-center">
                  <UserPlus className="w-6 h-6 text-white" />
                </div>
                <div>
                  <CardTitle className="text-orange-100">Spiel beitreten</CardTitle>
                  <CardDescription className="text-orange-300">Tritt einem bestehenden Spiel bei</CardDescription>
                </div>
              </div>
            </CardHeader>
            <CardContent>
              <Link to={createPageUrl("JoinDnDGame")}>
                <Button className="w-full bg-gradient-to-r from-blue-600 to-purple-600 hover:from-blue-700 hover:to-purple-700 text-white">
                  Spiel beitreten
                </Button>
              </Link>
            </CardContent>
          </Card>
        </motion.div>

        <div className="grid lg:grid-cols-2 gap-8">
          {/* Meine Spiele (als GM) */}
          <div>
            <motion.h2 
              className="text-3xl font-bold text-orange-100 mb-6 flex items-center space-x-3"
              initial={{ opacity: 0, x: -30 }}
              animate={{ opacity: 1, x: 0 }}
              transition={{ duration: 0.6, delay: 0.2 }}
            >
              <Crown className="w-8 h-8 text-orange-400" />
              <span>Meine Kampagnen</span>
            </motion.h2>
            
            {myGames.length > 0 ? (
              <div className="space-y-4">
                {myGames.map((game, index) => (
                  <motion.div
                    key={game.id}
                    initial={{ opacity: 0, y: 30 }}
                    animate={{ opacity: 1, y: 0 }}
                    transition={{ duration: 0.6, delay: index * 0.1 }}
                  >
                    <Card className="bg-orange-800/20 border-orange-700/30 backdrop-blur hover:bg-orange-800/30 transition-all duration-300">
                      <CardHeader>
                        <div className="flex justify-between items-start">
                          <div>
                            <CardTitle className="text-orange-100 text-xl">{game.name}</CardTitle>
                            <CardDescription className="text-orange-300 mt-2">
                              {game.description || "Keine Beschreibung"}
                            </CardDescription>
                          </div>
                          <Badge 
                            variant="outline" 
                            className={`${
                              game.status === 'active' ? 'bg-green-500/20 text-green-400 border-green-500/30' :
                              game.status === 'waiting' ? 'bg-yellow-500/20 text-yellow-400 border-yellow-500/30' :
                              'bg-gray-500/20 text-gray-400 border-gray-500/30'
                            }`}
                          >
                            {game.status === 'active' ? 'Aktiv' : 
                             game.status === 'waiting' ? 'Wartend' : 'Pausiert'}
                          </Badge>
                        </div>
                      </CardHeader>
                      <CardContent>
                        <div className="flex justify-between items-center mb-4">
                          <div className="text-sm text-orange-300">
                            Join-Code: <span className="font-mono font-bold text-orange-200">{game.join_code}</span>
                          </div>
                          <div className="flex items-center space-x-1 text-orange-300">
                            <Users className="w-4 h-4" />
                            <span className="text-sm">Max. {game.max_players} Spieler</span>
                          </div>
                        </div>
                        {/* Updated button layout for GM tools */}
                        <div className="grid grid-cols-2 gap-2">
                          <Link to={createPageUrl(`ManageDnDGame?id=${game.id}`)}>
                            <Button size="sm" className="w-full bg-orange-600 hover:bg-orange-700">
                              <Settings className="w-4 h-4 mr-2" />
                              Verwalten
                            </Button>
                          </Link>
                          <Link to={createPageUrl(`PlayerManagement?gameId=${game.id}`)}>
                            <Button size="sm" className="w-full bg-orange-600 hover:bg-orange-700">
                              <Users className="w-4 h-4 mr-2" />
                              Spieler
                            </Button>
                          </Link>
                          <Link to={createPageUrl(`MapManagement?gameId=${game.id}`)}>
                            <Button size="sm" className="w-full bg-orange-600 hover:bg-orange-700">
                              <MapIcon className="w-4 h-4 mr-2" />
                              Karten
                            </Button>
                          </Link>
                           <Link to={createPageUrl(`EnemyManagement?gameId=${game.id}`)}>
                            <Button size="sm" className="w-full bg-red-600 hover:bg-red-700">
                              <Swords className="w-4 h-4 mr-2" />
                              Gegner
                            </Button>
                          </Link>
                          <Link to={createPageUrl(`DiceManagement?gameId=${game.id}`)}>
                            <Button size="sm" className="w-full bg-purple-600 hover:bg-purple-700">
                              <Dice1 className="w-4 h-4 mr-2" />
                              W√ºrfel
                            </Button>
                          </Link>
                          <Link to={createPageUrl(`LootManagement?gameId=${game.id}`)}>
                            <Button size="sm" className="w-full bg-amber-600 hover:bg-amber-700">
                              <TreasureChest className="w-4 h-4 mr-2" />
                              Loot
                            </Button>
                          </Link>
                        </div>
                        <div className="mt-2">
                           <Button 
                            size="sm" 
                            onClick={() => startGame(game.id)}
                            disabled={game.status === 'active'}
                            className="w-full bg-green-600 hover:bg-green-700 disabled:bg-gray-600"
                          >
                            <Play className="w-4 h-4 mr-2" />
                            {game.status === 'active' ? 'L√§uft' : 'Starten'}
                          </Button>
                        </div>
                      </CardContent>
                    </Card>
                  </motion.div>
                ))}
              </div>
            ) : (
              <Card className="bg-orange-800/10 border-orange-700/20 backdrop-blur">
                <CardContent className="text-center py-12">
                  <Dice1 className="w-16 h-16 text-orange-400 mx-auto mb-4 opacity-50" />
                  <p className="text-orange-300 mb-4">Du hast noch keine Kampagnen erstellt.</p>
                  <Link to={createPageUrl("CreateDnDGame")}>
                    <Button className="bg-gradient-to-r from-orange-600 to-red-600 hover:from-orange-700 hover:to-red-700">
                      Erste Kampagne erstellen
                    </Button>
                  </Link>
                </CardContent>
              </Card>
            )}
          </div>

          {/* Spiele als Spieler */}
          <div>
            <motion.h2 
              className="text-3xl font-bold text-orange-100 mb-6 flex items-center space-x-3"
              initial={{ opacity: 0, x: 30 }}
              animate={{ opacity: 1, x: 0 }}
              transition={{ duration: 0.6, delay: 0.3 }}
            >
              <Gamepad2 className="w-8 h-8 text-blue-400" />
              <span>Meine Charaktere</span>
            </motion.h2>
            
            {joinedGames.length > 0 ? (
              <div className="space-y-4">
                {joinedGames.map((game, index) => (
                  <motion.div
                    key={game.id}
                    initial={{ opacity: 0, y: 30 }}
                    animate={{ opacity: 1, y: 0 }}
                    transition={{ duration: 0.6, delay: index * 0.1 }}
                  >
                    <Card className="bg-blue-800/20 border-blue-700/30 backdrop-blur hover:bg-blue-800/30 transition-all duration-300">
                      <CardHeader>
                        <div className="flex justify-between items-start">
                          <div>
                            <CardTitle className="text-blue-100 text-xl">{game.name}</CardTitle>
                            <CardDescription className="text-blue-300 mt-2">
                              GM: {getDisplayName(game.gamemaster_email)}
                            </CardDescription>
                          </div>
                          <Badge 
                            variant="outline" 
                            className={`${
                              game.status === 'active' ? 'bg-green-500/20 text-green-400 border-green-500/30' :
                              game.status === 'waiting' ? 'bg-yellow-500/20 text-yellow-400 border-yellow-500/30' :
                              'bg-gray-500/20 text-gray-400 border-gray-500/30'
                            }`}
                          >
                            {game.status === 'active' ? 'Aktiv' : 
                             game.status === 'waiting' ? 'Wartend' : 'Pausiert'}
                          </Badge>
                        </div>
                      </CardHeader>
                      <CardContent>
                        <div className="grid grid-cols-2 gap-2">
                          {game.status !== 'active' ? (
                            <Link to={createPageUrl(`CharacterEditor?gameId=${game.id}`)} className="col-span-2">
                              <Button size="sm" className="w-full bg-blue-600 hover:bg-blue-700">
                                <Settings className="w-4 h-4 mr-2" />
                                Charakter bearbeiten
                              </Button>
                            </Link>
                          ) : (
                            <>
                              <Link to={createPageUrl(`GameView?gameId=${game.id}`)}>
                                <Button size="sm" className="w-full bg-green-600 hover:bg-green-700">
                                  <Play className="w-4 h-4 mr-2" />
                                  Spiel beitreten
                                </Button>
                              </Link>
                              <Link to={createPageUrl(`CharacterEditor?gameId=${game.id}`)}>
                                <Button size="sm" variant="outline" className="w-full border-blue-600 text-blue-200 hover:bg-blue-800/30">
                                  <Settings className="w-4 h-4 mr-2" />
                                  Charakter
                                </Button>
                              </Link>
                            </>
                          )}
                        </div>
                      </CardContent>
                    </Card>
                  </motion.div>
                ))}
              </div>
            ) : (
              <Card className="bg-blue-800/10 border-blue-700/20 backdrop-blur">
                <CardContent className="text-center py-12">
                  <Users className="w-16 h-16 text-blue-400 mx-auto mb-4 opacity-50" />
                  <p className="text-blue-300 mb-4">Du nimmst an keinen Spielen teil.</p>
                  <Link to={createPageUrl("JoinDnDGame")}>
                    <Button className="bg-gradient-to-r from-blue-600 to-purple-600 hover:from-blue-700 hover:to-purple-700">
                      Spiel beitreten
                    </Button>
                  </Link>
                </CardContent>
              </Card>
            )}
          </div>
        </div>
      </div>
    </div>
  );
}
